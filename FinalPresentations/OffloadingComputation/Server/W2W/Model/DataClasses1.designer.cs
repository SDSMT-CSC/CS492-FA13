#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18408
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace W2W.Model
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="W2W")]
	public partial class DataClasses1DataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertCloth(Cloth instance);
    partial void UpdateCloth(Cloth instance);
    partial void DeleteCloth(Cloth instance);
    partial void InsertClothingImage(ClothingImage instance);
    partial void UpdateClothingImage(ClothingImage instance);
    partial void DeleteClothingImage(ClothingImage instance);
    #endregion
		
		public DataClasses1DataContext() : 
				base(global::W2W.Properties.Settings.Default.W2WConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<Cloth> Cloths
		{
			get
			{
				return this.GetTable<Cloth>();
			}
		}
		
		public System.Data.Linq.Table<ClothingImage> ClothingImages
		{
			get
			{
				return this.GetTable<ClothingImage>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Cloth")]
	public partial class Cloth : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _ClothingID;
		
		private bool _CanBlack;
		
		private bool _CanBlue;
		
		private bool _CanBrown;
		
		private bool _CanGreen;
		
		private bool _CanGrey;
		
		private bool _CanOrange;
		
		private bool _CanPink;
		
		private bool _CanPurple;
		
		private bool _CanRed;
		
		private bool _CanWhite;
		
		private bool _CanYellow;
		
		private bool _IsBlack;
		
		private bool _IsBlue;
		
		private bool _IsBrown;
		
		private bool _IsGreen;
		
		private bool _IsGrey;
		
		private bool _IsOrange;
		
		private bool _IsPink;
		
		private bool _IsPurple;
		
		private bool _IsRed;
		
		private bool _IsWhite;
		
		private bool _IsYellow;
		
		private bool _IsRelaxed;
		
		private bool _IsBusiness;
		
		private bool _IsCasual;
		
		private bool _IsFormal;
		
		private System.Nullable<int> _IdealTemp;
		
		private bool _IsDirty;
		
		private string _Description;
		
		private int _Type;
		
		private EntitySet<ClothingImage> _ClothingImages;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnClothingIDChanging(long value);
    partial void OnClothingIDChanged();
    partial void OnCanBlackChanging(bool value);
    partial void OnCanBlackChanged();
    partial void OnCanBlueChanging(bool value);
    partial void OnCanBlueChanged();
    partial void OnCanBrownChanging(bool value);
    partial void OnCanBrownChanged();
    partial void OnCanGreenChanging(bool value);
    partial void OnCanGreenChanged();
    partial void OnCanGreyChanging(bool value);
    partial void OnCanGreyChanged();
    partial void OnCanOrangeChanging(bool value);
    partial void OnCanOrangeChanged();
    partial void OnCanPinkChanging(bool value);
    partial void OnCanPinkChanged();
    partial void OnCanPurpleChanging(bool value);
    partial void OnCanPurpleChanged();
    partial void OnCanRedChanging(bool value);
    partial void OnCanRedChanged();
    partial void OnCanWhiteChanging(bool value);
    partial void OnCanWhiteChanged();
    partial void OnCanYellowChanging(bool value);
    partial void OnCanYellowChanged();
    partial void OnIsBlackChanging(bool value);
    partial void OnIsBlackChanged();
    partial void OnIsBlueChanging(bool value);
    partial void OnIsBlueChanged();
    partial void OnIsBrownChanging(bool value);
    partial void OnIsBrownChanged();
    partial void OnIsGreenChanging(bool value);
    partial void OnIsGreenChanged();
    partial void OnIsGreyChanging(bool value);
    partial void OnIsGreyChanged();
    partial void OnIsOrangeChanging(bool value);
    partial void OnIsOrangeChanged();
    partial void OnIsPinkChanging(bool value);
    partial void OnIsPinkChanged();
    partial void OnIsPurpleChanging(bool value);
    partial void OnIsPurpleChanged();
    partial void OnIsRedChanging(bool value);
    partial void OnIsRedChanged();
    partial void OnIsWhiteChanging(bool value);
    partial void OnIsWhiteChanged();
    partial void OnIsYellowChanging(bool value);
    partial void OnIsYellowChanged();
    partial void OnIsRelaxedChanging(bool value);
    partial void OnIsRelaxedChanged();
    partial void OnIsBusinessChanging(bool value);
    partial void OnIsBusinessChanged();
    partial void OnIsCasualChanging(bool value);
    partial void OnIsCasualChanged();
    partial void OnIsFormalChanging(bool value);
    partial void OnIsFormalChanged();
    partial void OnIdealTempChanging(System.Nullable<int> value);
    partial void OnIdealTempChanged();
    partial void OnIsDirtyChanging(bool value);
    partial void OnIsDirtyChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnTypeChanging(int value);
    partial void OnTypeChanged();
    #endregion
		
		public Cloth()
		{
			this._ClothingImages = new EntitySet<ClothingImage>(new Action<ClothingImage>(this.attach_ClothingImages), new Action<ClothingImage>(this.detach_ClothingImages));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClothingID", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long ClothingID
		{
			get
			{
				return this._ClothingID;
			}
			set
			{
				if ((this._ClothingID != value))
				{
					this.OnClothingIDChanging(value);
					this.SendPropertyChanging();
					this._ClothingID = value;
					this.SendPropertyChanged("ClothingID");
					this.OnClothingIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CanBlack", DbType="Bit NOT NULL")]
		public bool CanBlack
		{
			get
			{
				return this._CanBlack;
			}
			set
			{
				if ((this._CanBlack != value))
				{
					this.OnCanBlackChanging(value);
					this.SendPropertyChanging();
					this._CanBlack = value;
					this.SendPropertyChanged("CanBlack");
					this.OnCanBlackChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CanBlue", DbType="Bit NOT NULL")]
		public bool CanBlue
		{
			get
			{
				return this._CanBlue;
			}
			set
			{
				if ((this._CanBlue != value))
				{
					this.OnCanBlueChanging(value);
					this.SendPropertyChanging();
					this._CanBlue = value;
					this.SendPropertyChanged("CanBlue");
					this.OnCanBlueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CanBrown", DbType="Bit NOT NULL")]
		public bool CanBrown
		{
			get
			{
				return this._CanBrown;
			}
			set
			{
				if ((this._CanBrown != value))
				{
					this.OnCanBrownChanging(value);
					this.SendPropertyChanging();
					this._CanBrown = value;
					this.SendPropertyChanged("CanBrown");
					this.OnCanBrownChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CanGreen", DbType="Bit NOT NULL")]
		public bool CanGreen
		{
			get
			{
				return this._CanGreen;
			}
			set
			{
				if ((this._CanGreen != value))
				{
					this.OnCanGreenChanging(value);
					this.SendPropertyChanging();
					this._CanGreen = value;
					this.SendPropertyChanged("CanGreen");
					this.OnCanGreenChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CanGrey", DbType="Bit NOT NULL")]
		public bool CanGrey
		{
			get
			{
				return this._CanGrey;
			}
			set
			{
				if ((this._CanGrey != value))
				{
					this.OnCanGreyChanging(value);
					this.SendPropertyChanging();
					this._CanGrey = value;
					this.SendPropertyChanged("CanGrey");
					this.OnCanGreyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CanOrange", DbType="Bit NOT NULL")]
		public bool CanOrange
		{
			get
			{
				return this._CanOrange;
			}
			set
			{
				if ((this._CanOrange != value))
				{
					this.OnCanOrangeChanging(value);
					this.SendPropertyChanging();
					this._CanOrange = value;
					this.SendPropertyChanged("CanOrange");
					this.OnCanOrangeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CanPink", DbType="Bit NOT NULL")]
		public bool CanPink
		{
			get
			{
				return this._CanPink;
			}
			set
			{
				if ((this._CanPink != value))
				{
					this.OnCanPinkChanging(value);
					this.SendPropertyChanging();
					this._CanPink = value;
					this.SendPropertyChanged("CanPink");
					this.OnCanPinkChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CanPurple", DbType="Bit NOT NULL")]
		public bool CanPurple
		{
			get
			{
				return this._CanPurple;
			}
			set
			{
				if ((this._CanPurple != value))
				{
					this.OnCanPurpleChanging(value);
					this.SendPropertyChanging();
					this._CanPurple = value;
					this.SendPropertyChanged("CanPurple");
					this.OnCanPurpleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CanRed", DbType="Bit NOT NULL")]
		public bool CanRed
		{
			get
			{
				return this._CanRed;
			}
			set
			{
				if ((this._CanRed != value))
				{
					this.OnCanRedChanging(value);
					this.SendPropertyChanging();
					this._CanRed = value;
					this.SendPropertyChanged("CanRed");
					this.OnCanRedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CanWhite", DbType="Bit NOT NULL")]
		public bool CanWhite
		{
			get
			{
				return this._CanWhite;
			}
			set
			{
				if ((this._CanWhite != value))
				{
					this.OnCanWhiteChanging(value);
					this.SendPropertyChanging();
					this._CanWhite = value;
					this.SendPropertyChanged("CanWhite");
					this.OnCanWhiteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CanYellow", DbType="Bit NOT NULL")]
		public bool CanYellow
		{
			get
			{
				return this._CanYellow;
			}
			set
			{
				if ((this._CanYellow != value))
				{
					this.OnCanYellowChanging(value);
					this.SendPropertyChanging();
					this._CanYellow = value;
					this.SendPropertyChanged("CanYellow");
					this.OnCanYellowChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsBlack", DbType="Bit NOT NULL")]
		public bool IsBlack
		{
			get
			{
				return this._IsBlack;
			}
			set
			{
				if ((this._IsBlack != value))
				{
					this.OnIsBlackChanging(value);
					this.SendPropertyChanging();
					this._IsBlack = value;
					this.SendPropertyChanged("IsBlack");
					this.OnIsBlackChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsBlue", DbType="Bit NOT NULL")]
		public bool IsBlue
		{
			get
			{
				return this._IsBlue;
			}
			set
			{
				if ((this._IsBlue != value))
				{
					this.OnIsBlueChanging(value);
					this.SendPropertyChanging();
					this._IsBlue = value;
					this.SendPropertyChanged("IsBlue");
					this.OnIsBlueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsBrown", DbType="Bit NOT NULL")]
		public bool IsBrown
		{
			get
			{
				return this._IsBrown;
			}
			set
			{
				if ((this._IsBrown != value))
				{
					this.OnIsBrownChanging(value);
					this.SendPropertyChanging();
					this._IsBrown = value;
					this.SendPropertyChanged("IsBrown");
					this.OnIsBrownChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsGreen", DbType="Bit NOT NULL")]
		public bool IsGreen
		{
			get
			{
				return this._IsGreen;
			}
			set
			{
				if ((this._IsGreen != value))
				{
					this.OnIsGreenChanging(value);
					this.SendPropertyChanging();
					this._IsGreen = value;
					this.SendPropertyChanged("IsGreen");
					this.OnIsGreenChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsGrey", DbType="Bit NOT NULL")]
		public bool IsGrey
		{
			get
			{
				return this._IsGrey;
			}
			set
			{
				if ((this._IsGrey != value))
				{
					this.OnIsGreyChanging(value);
					this.SendPropertyChanging();
					this._IsGrey = value;
					this.SendPropertyChanged("IsGrey");
					this.OnIsGreyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsOrange", DbType="Bit NOT NULL")]
		public bool IsOrange
		{
			get
			{
				return this._IsOrange;
			}
			set
			{
				if ((this._IsOrange != value))
				{
					this.OnIsOrangeChanging(value);
					this.SendPropertyChanging();
					this._IsOrange = value;
					this.SendPropertyChanged("IsOrange");
					this.OnIsOrangeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsPink", DbType="Bit NOT NULL")]
		public bool IsPink
		{
			get
			{
				return this._IsPink;
			}
			set
			{
				if ((this._IsPink != value))
				{
					this.OnIsPinkChanging(value);
					this.SendPropertyChanging();
					this._IsPink = value;
					this.SendPropertyChanged("IsPink");
					this.OnIsPinkChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsPurple", DbType="Bit NOT NULL")]
		public bool IsPurple
		{
			get
			{
				return this._IsPurple;
			}
			set
			{
				if ((this._IsPurple != value))
				{
					this.OnIsPurpleChanging(value);
					this.SendPropertyChanging();
					this._IsPurple = value;
					this.SendPropertyChanged("IsPurple");
					this.OnIsPurpleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsRed", DbType="Bit NOT NULL")]
		public bool IsRed
		{
			get
			{
				return this._IsRed;
			}
			set
			{
				if ((this._IsRed != value))
				{
					this.OnIsRedChanging(value);
					this.SendPropertyChanging();
					this._IsRed = value;
					this.SendPropertyChanged("IsRed");
					this.OnIsRedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsWhite", DbType="Bit NOT NULL")]
		public bool IsWhite
		{
			get
			{
				return this._IsWhite;
			}
			set
			{
				if ((this._IsWhite != value))
				{
					this.OnIsWhiteChanging(value);
					this.SendPropertyChanging();
					this._IsWhite = value;
					this.SendPropertyChanged("IsWhite");
					this.OnIsWhiteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsYellow", DbType="Bit NOT NULL")]
		public bool IsYellow
		{
			get
			{
				return this._IsYellow;
			}
			set
			{
				if ((this._IsYellow != value))
				{
					this.OnIsYellowChanging(value);
					this.SendPropertyChanging();
					this._IsYellow = value;
					this.SendPropertyChanged("IsYellow");
					this.OnIsYellowChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsRelaxed", DbType="Bit NOT NULL")]
		public bool IsRelaxed
		{
			get
			{
				return this._IsRelaxed;
			}
			set
			{
				if ((this._IsRelaxed != value))
				{
					this.OnIsRelaxedChanging(value);
					this.SendPropertyChanging();
					this._IsRelaxed = value;
					this.SendPropertyChanged("IsRelaxed");
					this.OnIsRelaxedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsBusiness", DbType="Bit NOT NULL")]
		public bool IsBusiness
		{
			get
			{
				return this._IsBusiness;
			}
			set
			{
				if ((this._IsBusiness != value))
				{
					this.OnIsBusinessChanging(value);
					this.SendPropertyChanging();
					this._IsBusiness = value;
					this.SendPropertyChanged("IsBusiness");
					this.OnIsBusinessChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsCasual", DbType="Bit NOT NULL")]
		public bool IsCasual
		{
			get
			{
				return this._IsCasual;
			}
			set
			{
				if ((this._IsCasual != value))
				{
					this.OnIsCasualChanging(value);
					this.SendPropertyChanging();
					this._IsCasual = value;
					this.SendPropertyChanged("IsCasual");
					this.OnIsCasualChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsFormal", DbType="Bit NOT NULL")]
		public bool IsFormal
		{
			get
			{
				return this._IsFormal;
			}
			set
			{
				if ((this._IsFormal != value))
				{
					this.OnIsFormalChanging(value);
					this.SendPropertyChanging();
					this._IsFormal = value;
					this.SendPropertyChanged("IsFormal");
					this.OnIsFormalChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdealTemp", DbType="Int")]
		public System.Nullable<int> IdealTemp
		{
			get
			{
				return this._IdealTemp;
			}
			set
			{
				if ((this._IdealTemp != value))
				{
					this.OnIdealTempChanging(value);
					this.SendPropertyChanging();
					this._IdealTemp = value;
					this.SendPropertyChanged("IdealTemp");
					this.OnIdealTempChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsDirty", DbType="Bit NOT NULL")]
		public bool IsDirty
		{
			get
			{
				return this._IsDirty;
			}
			set
			{
				if ((this._IsDirty != value))
				{
					this.OnIsDirtyChanging(value);
					this.SendPropertyChanging();
					this._IsDirty = value;
					this.SendPropertyChanged("IsDirty");
					this.OnIsDirtyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="Text", UpdateCheck=UpdateCheck.Never)]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Type", DbType="Int NOT NULL")]
		public int Type
		{
			get
			{
				return this._Type;
			}
			set
			{
				if ((this._Type != value))
				{
					this.OnTypeChanging(value);
					this.SendPropertyChanging();
					this._Type = value;
					this.SendPropertyChanged("Type");
					this.OnTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Cloth_ClothingImage", Storage="_ClothingImages", ThisKey="ClothingID", OtherKey="ClothingID")]
		public EntitySet<ClothingImage> ClothingImages
		{
			get
			{
				return this._ClothingImages;
			}
			set
			{
				this._ClothingImages.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ClothingImages(ClothingImage entity)
		{
			this.SendPropertyChanging();
			entity.Cloth = this;
		}
		
		private void detach_ClothingImages(ClothingImage entity)
		{
			this.SendPropertyChanging();
			entity.Cloth = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ClothingImage")]
	public partial class ClothingImage : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _ImageID;
		
		private long _ClothingID;
		
		private System.Nullable<int> _ImageHeight;
		
		private System.Nullable<int> _ImageWidth;
		
		private string _Image;
		
		private EntityRef<Cloth> _Cloth;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnImageIDChanging(long value);
    partial void OnImageIDChanged();
    partial void OnClothingIDChanging(long value);
    partial void OnClothingIDChanged();
    partial void OnImageHeightChanging(System.Nullable<int> value);
    partial void OnImageHeightChanged();
    partial void OnImageWidthChanging(System.Nullable<int> value);
    partial void OnImageWidthChanged();
    partial void OnImageChanging(string value);
    partial void OnImageChanged();
    #endregion
		
		public ClothingImage()
		{
			this._Cloth = default(EntityRef<Cloth>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ImageID", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long ImageID
		{
			get
			{
				return this._ImageID;
			}
			set
			{
				if ((this._ImageID != value))
				{
					this.OnImageIDChanging(value);
					this.SendPropertyChanging();
					this._ImageID = value;
					this.SendPropertyChanged("ImageID");
					this.OnImageIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClothingID", DbType="BigInt NOT NULL")]
		public long ClothingID
		{
			get
			{
				return this._ClothingID;
			}
			set
			{
				if ((this._ClothingID != value))
				{
					if (this._Cloth.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnClothingIDChanging(value);
					this.SendPropertyChanging();
					this._ClothingID = value;
					this.SendPropertyChanged("ClothingID");
					this.OnClothingIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ImageHeight", DbType="Int")]
		public System.Nullable<int> ImageHeight
		{
			get
			{
				return this._ImageHeight;
			}
			set
			{
				if ((this._ImageHeight != value))
				{
					this.OnImageHeightChanging(value);
					this.SendPropertyChanging();
					this._ImageHeight = value;
					this.SendPropertyChanged("ImageHeight");
					this.OnImageHeightChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ImageWidth", DbType="Int")]
		public System.Nullable<int> ImageWidth
		{
			get
			{
				return this._ImageWidth;
			}
			set
			{
				if ((this._ImageWidth != value))
				{
					this.OnImageWidthChanging(value);
					this.SendPropertyChanging();
					this._ImageWidth = value;
					this.SendPropertyChanged("ImageWidth");
					this.OnImageWidthChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Image", DbType="Text", UpdateCheck=UpdateCheck.Never)]
		public string Image
		{
			get
			{
				return this._Image;
			}
			set
			{
				if ((this._Image != value))
				{
					this.OnImageChanging(value);
					this.SendPropertyChanging();
					this._Image = value;
					this.SendPropertyChanged("Image");
					this.OnImageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Cloth_ClothingImage", Storage="_Cloth", ThisKey="ClothingID", OtherKey="ClothingID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Cloth Cloth
		{
			get
			{
				return this._Cloth.Entity;
			}
			set
			{
				Cloth previousValue = this._Cloth.Entity;
				if (((previousValue != value) 
							|| (this._Cloth.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Cloth.Entity = null;
						previousValue.ClothingImages.Remove(this);
					}
					this._Cloth.Entity = value;
					if ((value != null))
					{
						value.ClothingImages.Add(this);
						this._ClothingID = value.ClothingID;
					}
					else
					{
						this._ClothingID = default(long);
					}
					this.SendPropertyChanged("Cloth");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
